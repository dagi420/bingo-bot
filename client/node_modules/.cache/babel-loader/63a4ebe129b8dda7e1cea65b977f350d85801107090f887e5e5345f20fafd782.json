{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\bingo-bot\\\\client\\\\client\\\\src\\\\components\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GamePage.css'; // Make sure to import the CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateBingoCards = () => {\n  const cards = [];\n  for (let i = 0; i < 200; i++) {\n    const card = [];\n    for (let j = 0; j < 25; j++) {\n      card.push(Math.floor(Math.random() * 75) + 1);\n    }\n    cards.push(card);\n  }\n  return cards;\n};\nconst GamePage = () => {\n  _s();\n  const [cards, setCards] = useState(generateBingoCards());\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [calledNumbers, setCalledNumbers] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [timer, setTimer] = useState(10); // 10 seconds countdown\n\n  useEffect(() => {\n    if (gameStarted && timer > 0) {\n      const interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (timer === 0) {\n      callNumber();\n      setTimer(10); // reset timer after each number is called\n    }\n  }, [timer, gameStarted]);\n  const selectCard = index => {\n    setSelectedCard(cards[index]);\n  };\n  const callNumber = () => {\n    let number;\n    do {\n      number = Math.floor(Math.random() * 75) + 1;\n    } while (calledNumbers.includes(number));\n    setCalledNumbers(prev => [...prev, number]);\n  };\n  const startGame = () => {\n    setGameStarted(true);\n    callNumber(); // call the first number\n  };\n  const isNumberInCard = number => {\n    return selectedCard.includes(number);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bingo-header\",\n      children: \"Select Your Bingo Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !selectedCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-selection\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bingo-card\",\n        onClick: () => selectCard(index),\n        children: card.map((number, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bingo-cell\",\n          children: number\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bingo-card\",\n        children: selectedCard.map((number, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bingo-cell ${calledNumbers.includes(number) ? 'selected' : ''}`,\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Time until next number: \", timer, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Called Numbers: \", calledNumbers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"wPsAd5LlLhI5YKj2sULkyskwQkw=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateBingoCards","cards","i","card","j","push","Math","floor","random","GamePage","_s","setCards","selectedCard","setSelectedCard","calledNumbers","setCalledNumbers","gameStarted","setGameStarted","timer","setTimer","interval","setInterval","prevTimer","clearInterval","callNumber","selectCard","index","number","includes","prev","startGame","isNumberInCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","idx","join","_c","$RefreshReg$"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/bingo-bot/client/client/src/components/GamePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GamePage.css'; // Make sure to import the CSS\r\n\r\nconst generateBingoCards = () => {\r\n  const cards = [];\r\n  for (let i = 0; i < 200; i++) {\r\n    const card = [];\r\n    for (let j = 0; j < 25; j++) {\r\n      card.push(Math.floor(Math.random() * 75) + 1);\r\n    }\r\n    cards.push(card);\r\n  }\r\n  return cards;\r\n};\r\n\r\nconst GamePage = () => {\r\n  const [cards, setCards] = useState(generateBingoCards());\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [calledNumbers, setCalledNumbers] = useState([]);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [timer, setTimer] = useState(10); // 10 seconds countdown\r\n\r\n  useEffect(() => {\r\n    if (gameStarted && timer > 0) {\r\n      const interval = setInterval(() => {\r\n        setTimer((prevTimer) => prevTimer - 1);\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    } else if (timer === 0) {\r\n      callNumber();\r\n      setTimer(10); // reset timer after each number is called\r\n    }\r\n  }, [timer, gameStarted]);\r\n\r\n  const selectCard = (index) => {\r\n    setSelectedCard(cards[index]);\r\n  };\r\n\r\n  const callNumber = () => {\r\n    let number;\r\n    do {\r\n      number = Math.floor(Math.random() * 75) + 1;\r\n    } while (calledNumbers.includes(number));\r\n\r\n    setCalledNumbers((prev) => [...prev, number]);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGameStarted(true);\r\n    callNumber(); // call the first number\r\n  };\r\n\r\n  const isNumberInCard = (number) => {\r\n    return selectedCard.includes(number);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-page\">\r\n      <h2 className=\"bingo-header\">Select Your Bingo Card</h2>\r\n      {!selectedCard ? (\r\n        <div className=\"cards-selection\">\r\n          {cards.map((card, index) => (\r\n            <div key={index} className=\"bingo-card\" onClick={() => selectCard(index)}>\r\n              {card.map((number, idx) => (\r\n                <div key={idx} className=\"bingo-cell\">\r\n                  {number}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-area\">\r\n          <div className=\"bingo-card\">\r\n            {selectedCard.map((number, index) => (\r\n              <div key={index} className={`bingo-cell ${calledNumbers.includes(number) ? 'selected' : ''}`}>\r\n                {number}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button className=\"play-button\" onClick={startGame}>\r\n            Start Game\r\n          </button>\r\n          <div className=\"game-info\">\r\n            <p>Time until next number: {timer} seconds</p>\r\n            <p>Called Numbers: {calledNumbers.join(', ')}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;IAC5B,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BD,IAAI,CAACE,IAAI,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC/C;IACAP,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC;EAClB;EACA,OAAOF,KAAK;AACd,CAAC;AAED,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACT,KAAK,EAAEU,QAAQ,CAAC,GAAGf,QAAQ,CAACI,kBAAkB,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd,IAAImB,WAAW,IAAIE,KAAK,GAAG,CAAC,EAAE;MAC5B,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCF,QAAQ,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;IACtC,CAAC,MAAM,IAAIF,KAAK,KAAK,CAAC,EAAE;MACtBM,UAAU,CAAC,CAAC;MACZL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACD,KAAK,EAAEF,WAAW,CAAC,CAAC;EAExB,MAAMS,UAAU,GAAIC,KAAK,IAAK;IAC5Bb,eAAe,CAACZ,KAAK,CAACyB,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMF,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIG,MAAM;IACV,GAAG;MACDA,MAAM,GAAGrB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IAC7C,CAAC,QAAQM,aAAa,CAACc,QAAQ,CAACD,MAAM,CAAC;IAEvCZ,gBAAgB,CAAEc,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,MAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBb,cAAc,CAAC,IAAI,CAAC;IACpBO,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMO,cAAc,GAAIJ,MAAM,IAAK;IACjC,OAAOf,YAAY,CAACgB,QAAQ,CAACD,MAAM,CAAC;EACtC,CAAC;EAED,oBACE5B,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlC,OAAA;MAAIiC,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvD,CAACzB,YAAY,gBACZb,OAAA;MAAKiC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BhC,KAAK,CAACqC,GAAG,CAAC,CAACnC,IAAI,EAAEuB,KAAK,kBACrB3B,OAAA;QAAiBiC,SAAS,EAAC,YAAY;QAACO,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACC,KAAK,CAAE;QAAAO,QAAA,EACtE9B,IAAI,CAACmC,GAAG,CAAC,CAACX,MAAM,EAAEa,GAAG,kBACpBzC,OAAA;UAAeiC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAClCN;QAAM,GADCa,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACN;MAAC,GALMX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENtC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlC,OAAA;QAAKiC,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBrB,YAAY,CAAC0B,GAAG,CAAC,CAACX,MAAM,EAAED,KAAK,kBAC9B3B,OAAA;UAAiBiC,SAAS,EAAE,cAAclB,aAAa,CAACc,QAAQ,CAACD,MAAM,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAM,QAAA,EAC1FN;QAAM,GADCD,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtC,OAAA;QAAQiC,SAAS,EAAC,aAAa;QAACO,OAAO,EAAET,SAAU;QAAAG,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtC,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBlC,OAAA;UAAAkC,QAAA,GAAG,0BAAwB,EAACf,KAAK,EAAC,UAAQ;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9CtC,OAAA;UAAAkC,QAAA,GAAG,kBAAgB,EAACnB,aAAa,CAAC2B,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5EID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}