{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dagio\\\\OneDrive\\\\Documents\\\\Projects\\\\bingo-bot\\\\client\\\\client\\\\src\\\\components\\\\GameDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameDashboard = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    const fetchGameState = async () => {\n      try {\n        const response = await fetch(`/api/games/state/${username}`);\n        const data = await response.json();\n        setGameState(data);\n      } catch (error) {\n        console.error('Failed to fetch game state:', error);\n      }\n    };\n    fetchGameState();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your game dashboard is ready.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GameDashboard, \"PBOyhNCiR2aWGJioRZyRl0VNEbM=\", false, function () {\n  return [useParams];\n});\n_c = GameDashboard;\nexport default GameDashboard;\nvar _c;\n$RefreshReg$(_c, \"GameDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","GameDashboard","_s","username","gameState","setGameState","fetchGameState","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dagio/OneDrive/Documents/Projects/bingo-bot/client/client/src/components/GameDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst GameDashboard = () => {\r\n  const { username } = useParams();\r\n  const [gameState, setGameState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGameState = async () => {\r\n      try {\r\n        const response = await fetch(`/api/games/state/${username}`);\r\n        const data = await response.json();\r\n        setGameState(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch game state:', error);\r\n      }\r\n    };\r\n    fetchGameState();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome, {username}!</h1>\r\n      <p>Your game dashboard is ready.</p>\r\n      {/* Render game state or game logic components */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoBL,QAAQ,EAAE,CAAC;QAC5D,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,GAAI,WAAS,EAACV,QAAQ,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BjB,OAAA;MAAAa,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBID,aAAa;EAAA,QACIH,SAAS;AAAA;AAAAoB,EAAA,GAD1BjB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}